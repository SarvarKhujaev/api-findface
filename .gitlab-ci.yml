variables:
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"

cache:
  paths:
    - ./.m2/repository
  key: "$CI_BUILD_REF_NAME"

stages:
  - compile
  - build
  - deploy

compile-job:
  stage: compile
  tags:
    - build
  only:
    - master
    - dev
  script:
    - "mvn clean compile $MAVEN_CLI_OPTS"
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

build-dev-job:
  stage: build
  tags:
    - build
  dependencies:
    - compile-job
  only:
    - dev
  environment:
    name: development
  script:
    - "mvn package $MAVEN_CLI_OPTS"
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

build-job:
  stage: build
  tags:
    - build
  dependencies:
    - compile-job
  only:
    - master
  environment:
    name: production
  script:
    - "mvn package $MAVEN_CLI_OPTS"
  artifacts:
    paths:
      - target/
    expire_in: 1 hour

deploy-dev-job:
  stage: deploy
  tags:
    - deploy
  dependencies:
    - build-dev-job
  only:
    - dev
  environment:
    name: development
  script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - "docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_NAME} ."
    - "docker push $CI_REGISTRY/$CI_PROJECT_PATH:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_NAME}"
    - "docker stack deploy --with-registry-auth -c docker-stack.yml ${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"

deploy-job:
  stage: deploy
  tags:
    - deploy
  dependencies:
    - build-job
  only:
    - master
  environment:
    name: production
  script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - "docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_NAME} ."
    - "docker push $CI_REGISTRY/$CI_PROJECT_PATH:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_NAME}"
    - "docker stack deploy --with-registry-auth -c docker-stack.yml ${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"
